scalar Date

schema {
	query : Query
	mutation : Mutation
}

type Query {
	userRead : [User]
	userLogin(form: LoginForm): String
	userCheck: User
	contentRead(form: ContentQuery): [Content]
}

type Mutation {
	userRegister(form: UserForm): User
	userUpdate(id: Int!, form: UserForm): Boolean
	userDelete(id: Int!): Boolean
	contentCreate(form: ContentForm): Content
	contentUpdate(id: Int!, form: ContentForm): Boolean
	contentDelete(id: Int!): Boolean
	contentTagCreate(form: ContentTagForm): Boolean
}

type User {
	id : Int
	username : String
	email: String
	role: String
	password: String
}

type Content {
	id : Int
	user_id : Int
	title : String
	body : String
	tag : [Tag]
	createdAt : Date
	updatedAt : Date
}

type Tag {
	tag_name : String
}

input UserForm {
	username : String
	email: String
	role: String
	password: String
}

input LoginForm {
	username : String
	password : String
}

input ContentQuery {
	id : Int
	user_id : Int
}

input ContentForm {
	user_id : Int
	title : String
	body : String
}

input ContentTagForm {
	content_id : Int
	tag_name : String
}